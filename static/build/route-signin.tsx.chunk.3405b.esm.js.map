{"version":3,"sources":["webpack:///./routes/signin.tsx"],"names":["Signin","error","updateError","useState","redirect","allowRedirect","useReducer","_","username","useRef","password","dispatch","useStoreon","useEffect","fetch","method","credentials","then","res","text","updateUsername","useCallback","event","current","currentTarget","value","updatePassword","login","async","preventDefault","response","headers","body","URLSearchParams","data","json","success","info","id","action","onSubmit","class","for","name","type","placeholder","onInput","onChange","href"],"mappings":"6FAAA,qEA0GeA,UAhGA,KACX,IAAKC,EAAOC,GAAeC,YAAS,KAC/BC,EAAUC,GAAiBC,YAAWC,KAAK,GAAM,GAElDC,EAAWC,YAAO,IAClBC,EAAWD,YAAO,KAElB,SAAEE,GAAaC,cAEnBC,YAAU,KACNC,MAAM,+BAAgC,CAClCC,OAAQ,OACRC,YAAa,YAEhBC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKC,IACCA,GACCb,EAAc,MAEvB,IAEH,IAAIe,EAAiBC,YAAaC,IAC1Bd,EAASe,QAAUD,EAAME,cAAcC,OACxC,IACHC,EAAiBL,YAAaC,IAC1BZ,EAASa,QAAUD,EAAME,cAAcC,OACxC,IAEHE,EAAQN,YAAYO,UAGpB,GAFAN,EAAMO,kBAEDrB,EAASe,UAAYb,EAASa,QAC/B,OAAOrB,EAAY,wCAEvB,IAAI4B,QAAiBhB,MAAM,yBAA0B,CACjDC,OAAQ,OACRgB,QAAS,CACT,eACI,mDAEJf,YAAa,UACbgB,KAAM,IAAIC,gBAAgB,CACtBzB,SAAUA,EAASe,QACnBb,SAAUA,EAASa,YAExBN,KAAKiB,GAAQA,EAAKC,QAElBL,EAASM,SAA6B,sBAAlBN,EAASO,MAC5B1B,EAAS,kBAAmBH,EAASe,SACrClB,EAAc,IAEdH,EAAY4B,EAASO,OAC1B,IAEH,OACI,oBACIC,GAAG,QACHC,OAAO,yBACPxB,OAAO,OACPyB,SAAUb,GAEV,kBAAIc,MAAM,SAAV,UACA,qBAAOA,MAAM,QAAQC,IAAI,YAAzB,YAGA,qBACID,MAAM,iBACNE,KAAK,WACLC,KAAK,OACLC,YAAY,WACZC,QAAS1B,IAEb,qBAAOqB,MAAM,QAAQC,IAAI,YAAzB,YAGA,qBACID,MAAM,iBACNE,KAAK,WACLC,KAAK,WACLC,YAAY,WACZE,SAAUrB,IAEbzB,GAAS,iBAAGwC,MAAM,mBAAmBxC,GACtC,uBAASwC,MAAM,UACX,sBAAQA,MAAM,SAAd,UACA,YAAC,IAAD,CAAMO,KAAK,WACP,iBAAGP,MAAM,QAAT,YAGNrC,GACE,YAAC,IAAD,CAAU4C,KAAK,S","file":"route-signin.tsx.chunk.3405b.esm.js","sourcesContent":["import { h } from 'preact'\nimport { useState, useRef, useReducer, useCallback, useEffect } from 'preact/hooks'\n\nimport { useStoreon } from 'storeon/preact'\nimport { UserStore, UserEvent } from '../stores/types'\n\nimport { Link, Redirect } from 'wouter/preact'\n\nimport '../styles/sign.styl'\n\nconst Signin = () => {\n    let [error, updateError] = useState(''),\n        [redirect, allowRedirect] = useReducer(_ => true, false)\n\n    let username = useRef(''),\n        password = useRef('')\n\n    let { dispatch } = useStoreon<UserStore, UserEvent>()\n\n    useEffect(() => {\n        fetch('http://localhost/api/refresh', {\n            method: 'POST',\n            credentials: 'include'\n        })\n        .then(res => res.text())\n        .then(res => {\n            if(res)\n                allowRedirect(1)\n        })\n    }, [])\n\n    let updateUsername = useCallback((event: any) => {\n            username.current = event.currentTarget.value\n        }, []),\n        updatePassword = useCallback((event: any) => {\n            password.current = event.currentTarget.value\n        }, [])\n\n    let login = useCallback(async (event: Event) => {\n        event.preventDefault()\n\n        if (!username.current || !password.current)\n            return updateError(\"Username and Password can't be blank\")\n\n        let response = await fetch('http://localhost/login', {\n            method: 'POST',\n            headers: {\n            'Content-Type':\n                'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            credentials: 'include',\n            body: new URLSearchParams({\n                username: username.current,\n                password: password.current\n            })\n        }).then(data => data.json())\n\n        if(response.success || response.info === \"Already signin in\") {\n            dispatch(\"UPDATE_USERNAME\", username.current)\n            allowRedirect(1)\n        } else\n            updateError(response.info)\n    }, [])\n    \n    return (\n        <form\n            id=\"login\"\n            action=\"http://localhost/login\"\n            method=\"POST\"\n            onSubmit={login}\n        >\n            <h1 class=\"title\">Signin</h1>\n            <label class=\"label\" for=\"username\">\n                Username\n            </label>\n            <input\n                class=\"input username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onInput={updateUsername}\n            />\n            <label class=\"label\" for=\"password\">\n                Password\n            </label>\n            <input\n                class=\"input password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={updatePassword}\n            />\n            {error && <p class=\"warning -hidden\">{error}</p>}\n            <section class=\"action\">\n                <button class=\"login\">Signin</button>\n                <Link href=\"/signup\">\n                    <a class=\"link\">Signup</a>\n                </Link>\n            </section>\n            { redirect &&\n                <Redirect href=\"/\" />\n            }\n        </form>\n    )\n}\n\nexport default Signin\n"],"sourceRoot":""}