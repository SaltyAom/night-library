{"version":3,"sources":["webpack:///./routes/signin.tsx"],"names":["Signin","useState","error","updateError","useReducer","redirect","allowRedirect","username","useRef","password","dispatch","useStoreon","useEffect","fetch","method","credentials","then","res","text","updateUsername","useCallback","event","current","currentTarget","value","updatePassword","login","response","preventDefault","headers","body","URLSearchParams","data","json","success","info","id","action","onSubmit","class","for","name","type","placeholder","onInput","onChange","href"],"mappings":"6FAAA,qEA4GeA,UA5FA,WAAM,MACUC,YAAS,IAA/BC,EADY,KACLC,EADK,OAEeC,aAAW,WAAC,OAAI,KAAM,GAAjDC,EAFY,KAEFC,EAFE,KAIbC,EAAWC,YAAO,IAClBC,EAAWD,YAAO,IAEhBE,EAAaC,cAAbD,SAENE,aAAU,WACNC,MAAM,+BAAgC,CAClCC,OAAQ,OACRC,YAAa,YAEZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACEA,GAAKX,EAAc,QAEhC,IAEH,IAAIa,EAAiBC,aAAY,SAACC,GAC1Bd,EAASe,QAAUD,EAAME,cAAcC,QACxC,IACHC,EAAiBL,aAAY,SAACC,GAC1BZ,EAASa,QAAUD,EAAME,cAAcC,QACxC,IAEHE,EAAQN,aAAY,SAAOC,GAAP,sCAMhBM,EAHJ,OAFAN,EAAMO,iBAEDrB,EAASe,SAAYb,EAASa,QAGpB,gBAAMT,MAAM,yBAA0B,CACjDC,OAAQ,OACRe,QAAS,CACL,eACI,mDAERd,YAAa,UACbe,KAAM,IAAIC,gBAAgB,CACtBxB,SAAUA,EAASe,QACnBb,SAAUA,EAASa,YAExBN,MAAK,SAAAgB,GAAI,OAAIA,EAAKC,WAXN,MAWa,uBAXxBN,EAAW,GAaFO,SAA6B,sBAAlBP,EAASQ,MAC7BzB,EAAS,kBAAmBH,EAASe,SACrChB,EAAc,IACXH,EAAYwB,EAASQ,MALA,+BAbjB,EAAAhC,EAAY,8CAmBxB,IAEH,OACI,oBACIiC,GAAG,QACHC,OAAO,yBACPvB,OAAO,OACPwB,SAAUZ,GAEV,kBAAIa,MAAM,SAAV,UACA,qBAAOA,MAAM,QAAQC,IAAI,YAAzB,YAGA,qBACID,MAAM,iBACNE,KAAK,WACLC,KAAK,OACLC,YAAY,WACZC,QAASzB,IAEb,qBAAOoB,MAAM,QAAQC,IAAI,YAAzB,YAGA,qBACID,MAAM,iBACNE,KAAK,WACLC,KAAK,WACLC,YAAY,WACZE,SAAUpB,IAEbvB,GAAS,iBAAGqC,MAAM,mBAAmBrC,GACtC,uBAASqC,MAAM,UACX,sBAAQA,MAAM,SAAd,UACA,YAAC,IAAD,CAAMO,KAAK,WACP,iBAAGP,MAAM,QAAT,YAGPlC,GAAY,YAAC,IAAD,CAAUyC,KAAK,S","file":"route-signin.tsx.chunk.e910c.js","sourcesContent":["import { h } from 'preact'\nimport {\n    useState,\n    useRef,\n    useReducer,\n    useCallback,\n    useEffect\n} from 'preact/hooks'\n\nimport { useStoreon } from 'storeon/preact'\nimport { UserStore, UserEvent } from '../stores/types'\n\nimport { Link, Redirect } from 'wouter/preact'\n\nimport '../styles/sign.styl'\n\nconst Signin = () => {\n    let [error, updateError] = useState(''),\n        [redirect, allowRedirect] = useReducer(_ => true, false)\n\n    let username = useRef(''),\n        password = useRef('')\n\n    let { dispatch } = useStoreon<UserStore, UserEvent>()\n\n    useEffect(() => {\n        fetch('http://localhost/api/refresh', {\n            method: 'POST',\n            credentials: 'include'\n        })\n            .then(res => res.text())\n            .then(res => {\n                if (res) allowRedirect(1)\n            })\n    }, [])\n\n    let updateUsername = useCallback((event: any) => {\n            username.current = event.currentTarget.value\n        }, []),\n        updatePassword = useCallback((event: any) => {\n            password.current = event.currentTarget.value\n        }, [])\n\n    let login = useCallback(async (event: Event) => {\n        event.preventDefault()\n\n        if (!username.current || !password.current)\n            return updateError(\"Username and Password can't be blank\")\n\n        let response = await fetch('http://localhost/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type':\n                    'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            credentials: 'include',\n            body: new URLSearchParams({\n                username: username.current,\n                password: password.current\n            })\n        }).then(data => data.json())\n\n        if (response.success || response.info === 'Already signin in') {\n            dispatch('UPDATE_USERNAME', username.current)\n            allowRedirect(1)\n        } else updateError(response.info)\n    }, [])\n\n    return (\n        <form\n            id=\"login\"\n            action=\"http://localhost/login\"\n            method=\"POST\"\n            onSubmit={login}\n        >\n            <h1 class=\"title\">Signin</h1>\n            <label class=\"label\" for=\"username\">\n                Username\n            </label>\n            <input\n                class=\"input username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onInput={updateUsername}\n            />\n            <label class=\"label\" for=\"password\">\n                Password\n            </label>\n            <input\n                class=\"input password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={updatePassword}\n            />\n            {error && <p class=\"warning -hidden\">{error}</p>}\n            <section class=\"action\">\n                <button class=\"login\">Signin</button>\n                <Link href=\"/signup\">\n                    <a class=\"link\">Signup</a>\n                </Link>\n            </section>\n            {redirect && <Redirect href=\"/\" />}\n        </form>\n    )\n}\n\nexport default Signin\n"],"sourceRoot":""}